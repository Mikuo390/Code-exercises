#define _CRT_SECURE_NO_WARNINGS

#define SQUARE(X) X*X
#define SQUARE1(X) (X)*(X)
#define DOUBLE(X) X+X
#define DOUBLE1(X) (X+X)
#include<stdio.h>
int main()
{
	int ret = SQUARE(5);
	//int ret = 5 * 5;
	printf("ret =%d\n", ret);

	int a = SQUARE(5 + 1);
	//5+1*5+1=11
	int a1 = SQUARE1(5 + 1);
	printf("a=%d\n", a);
	printf("b=%d\n", a1);


	int c = 5;
	int C = 10 * DOUBLE(c);
	//int C = 10 * a + a;
	int C1 = 10 * DOUBLE1(c);
	//int C = 10 * (a + a);
	printf("C=%d\n", C);
	printf("C1=%d\n", C1);



	return 0;
}



#define MAX(X,Y) ((X)>(Y)?(X):(Y))
int main()
{
	int a = 10;
	int b = 11;

	int max = MAX(a++, b++);//
	//int max = ((a++)>(b++)?(a++):(b++));
	printf("%d\n", max);//12
	printf("%d\n", a);//11
	printf("%d\n", b);//13
}



//函数-1
int Max(int x, int y)
{
	return (x > y ? x : y);
}
//宏-2
#define MAX(X,Y) ((X)>(Y)?(X):(Y))
int main()
{
	int a = 10;
	int b = 20;
	float c = 3.0f;
	float d = 4.0f;
	//函数在调用的时候
	//会有函数调用和返回的开销
	int max = Max(a, b);
	printf("max=%d\n", max);
	//预处理阶段就完成了替换-类型无关且运算简单
	max = Max(a, b);
	printf("max=%d\n", max);
	


	//max = Max(c, d);
	//printf("max=%d\n", max);
	//max = Max(c, d);
	//printf("max=%d\n", max);
}



#define SIZEOF(type) sizeof(type)
int main()
{
	int ret = SIZEOF(int);
	printf("%d\n", ret);
	ret = sizeof(int);
	printf("%d\n", ret);
}



用宏定义malloc
#define MALLOC(num,type) (type*)malloc(num*sizeof(type))
int main()
{
	int* p = (int*)malloc(10 * sizeof(int));
	
	int* p = MALLOC(10, int);
	//int *p=(int*)malloc(10 * sizeof(int));
}
