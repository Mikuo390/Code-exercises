#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<errno.h>
int main()
{
	int* p = (int*)malloc(20);//=realoc(NULL,40);
	if (p == NULL)
	{
		//打印错误原因的一个方式
		printf("%s\n", strerror(errno));
	}
	else
	{
		//正常使用空间
		int i = 0;
		for (i = 0; i < 5; i++)
		{
			*(p + i) = i;
		}
	}
	//就是在使用malloc开辟的20个字节空间
	//假设这里，20个字节不能满足我们的使用
	//希望我们能够有40个字节的空间
	//这里可以使用realloc来调整动态开辟内存

	//realloc
	//1.如果p指向的空间之后有足够的内存空间可以追加，贼直接追加，后返回p
	//2.如果p指向的空间之后没有足够的内存空间可以追加，则重新找一个新区域
	//开辟一块满足需求的空间，并且把原来内存中的数组拷贝回来，是否原来内存空间
	//最后返回新开辟的内存空间地址
	//3.得用一个新的变量来接收realloc函数的返回值

	int*ptr = realloc(p, 400);
	if (ptr == NULL)
	{
		p = ptr;
		int i = 0;
		for (i = 5; i < 10; i++)
		{
			*(p + i) = i;
		}
		for (i = 0; i < 10; i++)
		{
			printf("%d ", *(p + i));
		}
	}
	//释放内存
	free(p);
	p = NULL;
	return 0;
}
